/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { CurveProxyLogic } from "../CurveProxyLogic";

export class CurveProxyLogic__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveProxyLogic {
    return new Contract(address, _abi, signerOrProvider) as CurveProxyLogic;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "curve",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "curveFunctionSig",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "curvePoolSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "curveUnderlyingIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "add_liquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "curve",
        type: "address",
      },
      {
        internalType: "address",
        name: "curveLp",
        type: "address",
      },
      {
        internalType: "int128",
        name: "index",
        type: "int128",
      },
    ],
    name: "remove_liquidity_one_coin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
